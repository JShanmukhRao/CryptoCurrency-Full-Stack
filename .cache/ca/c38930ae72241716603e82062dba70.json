{"id":"../../node_modules/public-encrypt/withPublic.js","dependencies":[{"name":"D:\\Projects\\Blockchain\\cryptochain\\package.json","includedInParent":true,"mtime":1611131868484},{"name":"D:\\Projects\\Blockchain\\cryptochain\\.babelrc","includedInParent":true,"mtime":1611132166368},{"name":"D:\\Projects\\Blockchain\\cryptochain\\node_modules\\public-encrypt\\package.json","includedInParent":true,"mtime":1611124131627},{"name":"bn.js","loc":{"line":1,"column":17},"parent":"D:\\Projects\\Blockchain\\cryptochain\\node_modules\\public-encrypt\\withPublic.js","resolved":"D:\\Projects\\Blockchain\\cryptochain\\node_modules\\bn.js\\lib\\bn.js"},{"name":"safe-buffer","loc":{"line":2,"column":21},"parent":"D:\\Projects\\Blockchain\\cryptochain\\node_modules\\public-encrypt\\withPublic.js","resolved":"D:\\Projects\\Blockchain\\cryptochain\\node_modules\\safe-buffer\\index.js"}],"generated":{"js":"\nvar BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n","map":{"mappings":[{"source":"../../node_modules/public-encrypt/withPublic.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/public-encrypt/withPublic.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/public-encrypt/withPublic.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/public-encrypt/withPublic.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/public-encrypt/withPublic.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/public-encrypt/withPublic.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/public-encrypt/withPublic.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/public-encrypt/withPublic.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/public-encrypt/withPublic.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/public-encrypt/withPublic.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/public-encrypt/withPublic.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/public-encrypt/withPublic.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/public-encrypt/withPublic.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}}],"sources":{"../../node_modules/public-encrypt/withPublic.js":"var BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n"},"lineCount":14}},"hash":"6efe85a0f0e353ac08b9ddbbbea02884","cacheData":{"env":{}}}